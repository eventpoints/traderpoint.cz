name: Release

on:
  push:
    branches: ['**']   # or ['main'] if you only want pushes to main

permissions:
  contents: read
  packages: write   # needed if you use GITHUB_TOKEN to push to GHCR

jobs:
  docker:
    name: Docker images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta PHP
        id: meta-php
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/eventpoints/traderpoint.cz-php
          tags: |
            type=ref,event=branch
            type=sha

      - name: Docker meta Caddy
        id: meta-caddy
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/eventpoints/traderpoint.cz-caddy
          tags: |
            type=ref,event=branch
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # You can use GITHUB_TOKEN instead of a PAT:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push PHP
        uses: docker/build-push-action@v5
        with:
          context: .
          target: php
          push: true
          tags: ${{ steps.meta-php.outputs.tags }}
          labels: ${{ steps.meta-php.outputs.labels }}
          cache-from: type=gha,scope=${{ github.workflow }}-php
          cache-to: type=gha,mode=max,scope=${{ github.workflow }}-php

      - name: Build and push Caddy
        uses: docker/build-push-action@v5
        with:
          context: .
          target: caddy
          push: true
          tags: ${{ steps.meta-caddy.outputs.tags }}
          labels: ${{ steps.meta-caddy.outputs.labels }}
          cache-from: type=gha,scope=${{ github.workflow }}-caddy
          cache-to: type=gha,mode=max,scope=${{ github.workflow }}-caddy

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    if: github.ref == 'refs/heads/main'   # deploy only from pushes to main
    environment:
      name: prod
      url: https://traderpoint.cz
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy docker-compose template
        run: cp .deployment/docker-compose.production-template.yml .deployment/docker-compose.yml

      - name: Prepare docker-compose file
        run: echo $SECRETS | jq --raw-output 'keys[]' | while read -r secretKey; do cat .deployment/docker-compose.yml | sed "
